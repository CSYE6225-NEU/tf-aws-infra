name: Terraform Validation

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-validate:
    name: Validate Terraform
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7  # Specify your terraform version here
      
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check -recursive
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: terraform init -backend=false
      
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      - name: Check Format Results
        if: steps.fmt.outcome == 'failure'
        run: |
          echo "::error::Terraform format check failed. Run 'terraform fmt -recursive' locally to fix."
          exit 1
      
      - name: Terraform Plan
        id: plan
        run: |
          # Create a temporary terraform.tfvars file with placeholder values
          cat > terraform.tfvars << EOL
          aws_profile = "dummy"
          aws_build_region = "us-east-1"
          aws_vm_size = "t2.micro"
          aws_base_ami = "ami-12345678"
          db_password = "dummy_password_for_ci"
          key_name = "dummy-key"
          EOL
          
          # Run a plan in this PR branch
          terraform plan -var-file=terraform.tfvars -out=tfplan -input=false
        continue-on-error: true
      
      - name: Cleanup Sensitive Files
        if: always()
        run: |
          rm -f terraform.tfvars tfplan
      
      - name: Check Plan Results
        if: steps.plan.outcome == 'failure'
        run: |
          echo "::error::Terraform plan failed. See the workflow output for details."
          exit 1
      
      - name: Workflow Summary
        if: always()
        run: |
          echo "## Terraform Validation Results" >> $GITHUB_STEP_SUMMARY
          echo "* Format Check: ${{ steps.fmt.outcome == 'success' && 'Passed' || 'Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "* Init: ${{ steps.init.outcome == 'success' && 'Passed' || 'Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "* Validate: ${{ steps.validate.outcome == 'success' && 'Passed' || 'Failed' }}" >> $GITHUB_STEP_SUMMARY
          echo "* Plan: ${{ steps.plan.outcome == 'success' && 'Passed' || 'Failed' }}" >> $GITHUB_STEP_SUMMARY